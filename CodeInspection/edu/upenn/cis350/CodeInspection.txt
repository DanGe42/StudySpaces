//Major Issue: no comments anywhere

//Inspected by: Cory
1. APIAcessor.java - getStudySpaces()
  -lots of Message Chains
    -lots of getJSONObject().get...
    -line 39: calling getJSONObject(k) a lot, just store that object somewhere
      -this functionality  

    -the reader instantiation is a bit long
      -could put the url in its own variable, then build the readers
  -StudySpace constructor has a long paramter list
    -could just pass the relevant objects and fetch their details in the
    constructor
  -lots of duplicate variable names (temp is a common one)
    - "t" also tells us nothing about the array it refers to

//Inspected by: Cory
2. StudySpace.java - getGSRNames()
  -don't need to call getter methods when inside the class (makes code longer)
  -could use a switch statement in the for loop (would be faster)
  -ArrayList names could be more descriptive

//Uses JSON parsing
//Inspected by Daniel
3. Room.java - getAvailability()
  - long method
     - easiest ways to fix this while improving readability:
         * lines 128 - 133: `return true` and `return false` is not idiomatic. Any time you
           have code structured as such:
               if (condition) return true;
               else return false;
           you can shorten it to `return (condition)`
         * lines 137, 145: there is a specialized data types for storing values that can be
           of only two types: boolean
         * lines 149 - 154: since you're exiting when you set the flag to 1, you can rewrite
           this loop as thus:
               for (...) {
                   ...
                   if (condition) {
                       return true;
                   }
               }
               return false;
           Sure, this won't improve asymptotic running time, but it will improve performance
           somewhat by allowing for a short-circuit.

// Inspected by Daniel
4. StudySpaceListActivity.java - getView(int position, View convertView, ViewGroup parent)
  - Maintainability issue
     - Line 196: Pokemon Exception Handling ("for when you got to catch them all...")
        - avoid doing this; always be specific with the Exceptions you're catching
        - Also, if something goes wrong here, this clause will hide bugs such that it will
          make debugging a pain
     - Lines 179, 187, 189, 206, 207: Variable names are not descriptive. What do these
       two-letter variables represent?
     - Lines 225, 227, 229, 230: set getPackageName() to something, and use that instead
       of rewriting it multiple times.
  - long method
     - This method does too much. Recommendation: perform method extractions as you deem
       necessary.
  - Performance
     - Lines 224, 226, 228: Calling getBuildingType() has possible overhead. Store the
       result of this computation in a variable, and then use it. In addition, this is
       an example of method chaining.
  - Convention
     - Java convention uses camelCase for variable and method names.
     - Don't mix different conventions either.

//Very long
5. TabDetails.java - onActivityCreated(Bundle savedInstanceState)

